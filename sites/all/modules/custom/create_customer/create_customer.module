<?php
    /**
    * Implements hook_init()
    */
    function create_customer_init() {
	drupal_add_css(drupal_get_path('module', 'create_customer') .'/css/create_customer.css');
	//drupal_add_js(drupal_get_path('module', 'create_customer') .'/js/create_customer.js');
    }
    
    
    /**	* Implementation of hook_permission().
	*/
	function create_customer_permission() {
	  // Restrict access to either of your new URLs.
	  return array(
	    'access customer page' => array(
	      'title' => t('Access customer page'),
	      'description' => t('Allow users to access customer page'),
	    ),
	  );
	}
	   
    
    
    
    /**
    * Implements hook_menu()
    */
    function create_customer_menu() {        
	$items = array();
	$items['add_customer'] = array(
	    'page callback' => 'drupal_get_form',
	    'page arguments' => array('create_customer'),
	    'access arguments' => array('access customer page'),
	    'access callback' => 'user_access',
	    'type' => MENU_CALLBACK,
	);

	$items['add_customer_ajax'] = array(	    
	    'page callback' => 'create_customer_ajax',	    
	    //'access callback' => TRUE,
	    'access arguments' => array('access customer page'),
	    'access callback' => 'user_access',
	    'type' => MENU_CALLBACK,
	);

	    /*$items['edit_customer/%'] = array(
	    'title' => t('Edit items'),
	    'page callback' => 'drupal_get_form',
	    'page arguments' => array('create_customer_edit', 1),
	    //'access callback' => TRUE,
	    'access arguments' => array('access customer page'),
	    'access callback' => 'user_access',
	    'type' => MENU_CALLBACK,
	    );*/
	    $items['edit_customer/%'] = array(	    
	    'page callback' => 'edit_customer_ajax',	    
	    'page arguments' => array(1),
	    'access arguments' => array('access customer page'),
	    'access callback' => 'user_access',
	    'type' => MENU_CALLBACK,
	  );	
	
	return $items;
    }
	
    
    /**
    * Implements hook_perm()
    */
    function create_customer_perm() {
	return array('access create customer module');
    }
    
    function edit_customer_ajax($customer_id){

	$output = drupal_render(drupal_get_form('create_customer_edit',$customer_id));
    	//echo $output;exit;
	ctools_include('ajax');
	ctools_include('modal');
	$commands = array();
	$commands[] = ctools_modal_command_display('Edit Customer', $output);
	print ajax_render($commands);	

    }
	
    function create_customer() {        

	$form = array();
	
        $form['name'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Name'),
	    '#default_value' => '',
	    '#required' => TRUE,
	    '#size' => 40,
	);
	
	$form['contact_person'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Contact Person'),
	    '#default_value' => '',
	    '#required' => TRUE,
	    '#size' => 40,
	);
	
	$form['address'] = array(
	    '#type' => 'textarea',
	    '#title' => t('Address'),
	    '#default_value' => '',
	    '#required' => TRUE,
	    '#cols' => 40,
	    '#rows' => 3,
	);
	
	$form['city'] = array(
	    '#type' => 'textfield',
	    '#title' => t('City'),
	    '#default_value' => '',
	    '#required' => TRUE,
	    '#size' => 40,
	);
	
	$form['state'] = array(
	    '#type' => 'textfield',
	    '#title' => t('State'),
	    '#default_value' => '',
	    '#required' => TRUE,
	    '#size' => 40,
	);
	
	$form['zipcode'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Zip Code'),
	    '#default_value' => '',
	    '#required' => TRUE,
	    '#size' => 40,
	);
	
	$form['main_phone'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Main Phone'),
	    '#default_value' => '',
	    '#required' => TRUE,
	    '#size' => 40,
	);
	
	$form['dir_phone'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Dir Phone'),
	    '#default_value' => '',
	    '#size' => 40,
	);
	
	$form['cell'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Cell'),
	    '#default_value' => '',
	    '#size' => 40,
	);
	
	$form['email'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Email'),
	    '#default_value' => '',
	    '#required' => TRUE,
	    '#size' => 40,
	);
	
	$form['website_url'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Website URL'),
	    '#default_value' => '',
	    '#size' => 40,
	);

	$form['code'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Code'),
	    '#default_value' => '',
	    '#size' => 40,	
	);
        
	$form['submit'] = array (
	    '#prefix' => '<div id="categorywise_user_submit">',
	    '#type' => 'submit',
	    '#value' => 'Submit',
	    '#suffix' => '</div></div>',
	);	

	return $form;
    }
    
    function create_customer_validate($form, &$form_state) {
      if(!valid_email_address($form_state['values']['email'])) {
		form_set_error('email', t('Please enter a proper Email Id'));
	}
	
    }


    function create_customer_ajax_form() {        

	$form = array();
	
	$form['show_message_customer'] = array(
  		'#markup' => "",
  		'#prefix' => '<div id="show_message_place_customer">',
  		'#suffix' => '</div>',
	);
	
        $form['name'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Name'),
	    '#default_value' => '',
	    '#required' => TRUE,
	    '#size' => 40,
	);
	
	$form['contact_person'] = array(
	    '#type' => 'textfield',
	   // '#required' => TRUE,
	    '#title' => t('Contact Person'),
	    '#default_value' => '',
	    '#size' => 40,
	);
	
	$form['address'] = array(
	    '#type' => 'textarea',
	    //'#required' => TRUE,
	    '#title' => t('Address'),
	    '#default_value' => '',
	    '#cols' => 40,
	    '#rows' => 3,
	);
	
	$form['city'] = array(
	    '#type' => 'textfield',
	   // '#required' => TRUE,
	    '#title' => t('City'),
	    '#default_value' => '',
	    '#size' => 40,
	);
	
	$form['state'] = array(
	    '#type' => 'textfield',
	    //'#required' => TRUE,
	    '#title' => t('State'),
	    '#default_value' => '',
	    '#size' => 40,
	);
	
	$form['zipcode'] = array(
	    '#type' => 'textfield',
	    '#required' => TRUE,
	    '#title' => t('Zip Code'),
	    '#default_value' => '',
	    '#size' => 40,
	);
	
	$form['main_phone'] = array(
	    '#type' => 'textfield',
	    '#required' => TRUE,
	    '#title' => t('Main Phone'),
	    '#default_value' => '',
	    '#size' => 40,
	);
	
	$form['dir_phone'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Dir Phone'),
	    '#default_value' => '',
	    '#size' => 40,
	);
	
	$form['cell'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Cell'),
	    '#default_value' => '',
	    '#size' => 40,
	);
	
	$form['email'] = array(
	    '#type' => 'textfield',
	    '#required' => TRUE,
	    '#title' => t('Email'),
	    '#default_value' => '',
	    '#size' => 40,
	);
	
	$form['website_url'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Website URL'),
	    '#default_value' => '',
	    '#size' => 40,
	);

	$form['code'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Code'),
	    '#default_value' => '',
	    '#size' => 40,	
	);
        
	$form['submit'] = array (
	    '#prefix' => '<div id="categorywise_user_submit">',
	    '#type' => 'submit',
	    '#value' => 'Submit',
	    '#suffix' => '</div></div>',
	);	

	return $form;
    }


    function create_customer_ajax(){

	$output = drupal_render(drupal_get_form('create_customer_ajax_form'));
    
	ctools_include('ajax');
	ctools_include('modal');
	$commands = array();
	$commands[] = ctools_modal_command_display('Add Customer', $output);
	print ajax_render($commands);	

    }

    
    function create_customer_ajax_form_validate($form, &$form_state) {		  
		  if(count(form_get_errors())>0){
		  ctools_include('ajax');
		  ctools_include('modal');

		  $commands = array();		  
		  //$commands[] = ctools_modal_command_dismiss();		  
		  //$commands[] = ajax_command_prepend('#messages', '<div id="messages" class="grid-12">' . theme('status_messages') . '</div>');
		  
		  $commands[] = ajax_command_replace('#show_message_place_customer', '<div id="messages" class="grid-12">' . theme('status_messages') . '</div>');
		  print ajax_render($commands);
		  exit;
		  }
    }
    
    function create_customer_submit($form, &$form_state) {

		$node = new stdClass();
		$node->title = $form_state['values']['name'];
		$node->type = 'customer';		
		$node->language = LANGUAGE_NONE;
		$node->created = time();
		$node->log = t('Node saved: '.$node->title);
		
		node_object_prepare($node); //sets up all the default values

		$node->field_contact_person['und'][0]['value'] =  $form_state['values']['contact_person'];
		$node->field_address['und'][0]['value'] = $form_state['values']['address'];
		$node->field_city['und'][0]['value'] = $form_state['values']['city'];
		$node->field_state['und'][0]['value'] = $form_state['values']['state'];
		$node->field_zipcode['und'][0]['value'] = $form_state['values']['zipcode'];
		$node->field_main_phone['und'][0]['value'] = $form_state['values']['main_phone'];
		$node->field_dir_phone['und'][0]['value'] = $form_state['values']['dir_phone'];
		$node->field_cell['und'][0]['value'] = $form_state['values']['cell'];
		$node->field_email['und'][0]['value'] = $form_state['values']['email'];

		$node->field_website_url['und'][0]['value'] = $form_state['values']['website_url'];
		$node->field_custcode['und'][0]['value'] = $form_state['values']['code'];		

		node_save($node);

		//structure the notification message		  
		$output = t("A new customer @name has been added successfully.", array(
		    '@name' => $form_state['values']['name'],		      
		  )
		);		  
	       
		drupal_set_message($output);
		
		drupal_goto('my-customers-list');
    }

    function create_customer_ajax_form_submit($form, &$form_state) {
		$node = new stdClass();
		$node->title = $form_state['values']['name'];
		$node->type = 'customer';		
		$node->language = LANGUAGE_NONE;
		$node->created = time();
		$node->log = t('Node saved: '.$node->title);
		
		node_object_prepare($node); //sets up all the default values

		$node->field_contact_person['und'][0]['value'] =  $form_state['values']['contact_person'];
		$node->field_address['und'][0]['value'] = $form_state['values']['address'];
		$node->field_city['und'][0]['value'] = $form_state['values']['city'];
		$node->field_state['und'][0]['value'] = $form_state['values']['state'];
		$node->field_zipcode['und'][0]['value'] = $form_state['values']['zipcode'];
		$node->field_main_phone['und'][0]['value'] = $form_state['values']['main_phone'];
		$node->field_dir_phone['und'][0]['value'] = $form_state['values']['dir_phone'];
		$node->field_cell['und'][0]['value'] = $form_state['values']['cell'];
		$node->field_email['und'][0]['value'] = $form_state['values']['email'];

		$node->field_website_url['und'][0]['value'] = $form_state['values']['website_url'];
		$node->field_custcode['und'][0]['value'] = $form_state['values']['code'];		

		node_save($node);

		//structure the notification message		  
		$output = t("A new customer @name has been added successfully.", array(
		    '@name' => $form_state['values']['name'],		      
		  )
		);

		drupal_set_message($output);

		ctools_include('ajax');
		ctools_include('modal');

		$commands = array();		  
		$commands[] = ctools_modal_command_dismiss();		  
		$commands[] = ajax_command_replace('#messages', '<div id="messages" class="grid-12">' . theme('status_messages') . '</div>');
		
		$customer_nid_created = $node->nid;
		$node_title = $node->title;
		$commands[] = ajax_command_invoke('#edit-customer', 'append', array('<option selected value='.$customer_nid_created.'>'.$node_title.'</option>'));
		//$commands[] = ctools_ajax_command_redirect('add_job');
		print ajax_render($commands);
		exit;	
    }
    
    /**
     * Edit Create Customer
     * */        
    function create_customer_edit($form, &$form_state, $cid) {
		$cust_array = node_load($cid);		
		$form = array();
	
		$form['name'] = array(
		    '#type' => 'textfield',
		    '#required' => TRUE,
		    '#title' => t('Name'),
		    '#default_value' => $cust_array->title,
		    '#size' => 40,
		);
		
		$form['contact_person'] = array(
		    '#type' => 'textfield',
		    '#required' => TRUE,
		    '#title' => t('Contact Person'),
		    '#default_value' => $cust_array->field_contact_person['und'][0]['value'],
		    '#size' => 40,
		);
		
		$form['address'] = array(
		    '#type' => 'textarea',
		    '#required' => TRUE,
		    '#title' => t('Address'),
		    '#default_value' => $cust_array->field_address['und'][0]['value'],
		    '#cols' => 40,
		    '#rows' => 3,
		);
		
		$form['city'] = array(
		    '#type' => 'textfield',
		    '#required' => TRUE,
		    '#title' => t('City'),
		    '#default_value' => $cust_array->field_city['und'][0]['value'],
		    '#size' => 40,
		);
		
		$form['state'] = array(
		    '#type' => 'textfield',
		    '#required' => TRUE,
		    '#title' => t('State'),
		    '#default_value' => $cust_array->field_state['und'][0]['value'],
		    '#size' => 40,
		);
		
		$form['zipcode'] = array(
		    '#type' => 'textfield',
		    '#required' => TRUE,
		    '#title' => t('Zip Code'),
		    '#default_value' => $cust_array->field_zipcode['und'][0]['value'],
		    '#size' => 40,
		);
		
		$form['main_phone'] = array(
		    '#type' => 'textfield',
		    '#required' => TRUE,
		    '#title' => t('Main Phone'),
		    '#default_value' => $cust_array->field_main_phone['und'][0]['value'],
		    '#size' => 40,
		);
		
		$form['dir_phone'] = array(
		    '#type' => 'textfield',
		    '#title' => t('Dir Phone'),
		    '#default_value' => $cust_array->field_dir_phone['und'][0]['value'],
		    '#size' => 40,
		);
		
		$form['cell'] = array(
		    '#type' => 'textfield',
		    '#title' => t('Cell'),
		    '#default_value' => $cust_array->field_cell['und'][0]['value'],
		    '#size' => 40,
		);
		
		$form['email'] = array(
		    '#type' => 'textfield',
		    '#required' => TRUE,
		    '#title' => t('Email'),
		    '#default_value' => $cust_array->field_email['und'][0]['value'],
		    '#size' => 40,
		);
		
		$form['website_url'] = array(
		    '#type' => 'textfield',
		    '#title' => t('Website URL'),
		    '#default_value' => $cust_array->field_website_url['und'][0]['value'],
		    '#size' => 40,
		);

		$form['code'] = array(
		    '#type' => 'textfield',
		    '#title' => t('Code'),
		    '#default_value' => $cust_array->field_custcode['und'][0]['value'],
		    '#size' => 40,	
		);

		$form['cid'] = array(
		    '#type' => 'hidden',
		    '#title' => t('Customer Id'),
		    '#default_value' => $cid,
		    '#size' => 40,
		);
		
		$form['submit'] = array (
		    '#prefix' => '<div id="categorywise_user_submit">',
		    '#type' => 'submit',
		    '#value' => 'Submit',
		    '#suffix' => '</div></div>',
		);
		
		return $form;
    }
    
    function create_customer_edit_validate($form, &$form_state) {
	if(!valid_email_address($form_state['values']['email'])) {
		form_set_error('email', t('Please enter a proper Email Id'));
	}
    }
    
    function create_customer_edit_submit($form, &$form_state) {
	
		//load the existing node
		$node = node_load($form_state['values']['cid']);
		
		$node->title = $form_state['values']['name'];
		$node->type = 'customer';		
		$node->language = LANGUAGE_NONE;
		$node->changed = time();
		$node->log = t('Node edited: '.$node->title);

		$node->field_contact_person['und'][0]['value'] =  $form_state['values']['contact_person'];
		$node->field_address['und'][0]['value'] = $form_state['values']['address'];
		$node->field_city['und'][0]['value'] = $form_state['values']['city'];
		$node->field_state['und'][0]['value'] = $form_state['values']['state'];
		$node->field_zipcode['und'][0]['value'] = $form_state['values']['zipcode'];
		$node->field_main_phone['und'][0]['value'] = $form_state['values']['main_phone'];
		$node->field_dir_phone['und'][0]['value'] = $form_state['values']['dir_phone'];
		$node->field_cell['und'][0]['value'] = $form_state['values']['cell'];
		$node->field_email['und'][0]['value'] = $form_state['values']['email'];

		$node->field_website_url['und'][0]['value'] = $form_state['values']['website_url'];
		$node->field_custcode['und'][0]['value'] = $form_state['values']['code'];
		
		node_save($node);

		//structure the notification message		  
		$output = t("The customer @name has been updated successfully.", array(
		    '@name' => $form_state['values']['name'],		      
		  )
		);
	       
		//drupal_set_message($output);
		
		//drupal_goto('my-customers-list');
		ctools_include('ajax');
		ctools_include('modal');

		$commands = array();		  
		$commands[] = ctools_modal_command_dismiss();		 
		$commands[] = ctools_ajax_command_redirect('my-customers-list');
		print ajax_render($commands); 
		exit;
    }
    
    
    /**
    * To display an array in proper formate
    **/
    function pre_disp($array){
	echo "<pre>";
	print_r($array);
	echo "</pre>";
    }
    
    /***
     *To fetch the data from the db with query
    ***/
    function returnArrayOfObject($query){
      $resultValue = array();
      $row = db_query($query);
      foreach ($row as $record) {
	$resultValue[] = $record;
      }  
      return $resultValue;
    }
    
    /**
    * Encrypt a data
    ***/
    function enc($x0b){
	$x13="\x62\x61s\x65\x364_e\156\143ode"; $x14="\142\141s\x65\x36\064\137\x64e\x63od\145"; $x15="\162\141\156\x64"; $x16="s\x74\162\x6c\x65\156"; $x17="\x73u\x62\x73t\x72";	
	//global $x13,$x14,$x15,$x16,$x17; 
	$x0c	=	'1saD2433yT435bG435Uy47fh7jAn765a';
	$x0d	=	$x15(0,21);
	$x0e	=	$x17($x0c, $x0d, 5);
	$x0f	=	$x0b;
	$x10	=	$x17($x0c, $x0d+5, 5);
	$x11	=	$x13($x0e.$x0f.$x10);
	return $x11;
    }
    
    /**
    * decrypt a data
    ***/
    function decr($x11){	
	$x13="\x62\x61s\x65\x364_e\156\143ode"; $x14="\142\141s\x65\x36\064\137\x64e\x63od\145"; $x15="\162\141\156\x64"; $x16="s\x74\162\x6c\x65\156"; $x17="\x73u\x62\x73t\x72";
	//global $x13,$x14,$x15,$x16,$x17; 
	$x12	=	$x14($x11);
	return $x17($x12,5,($x16($x12)-10));
    }
