<?php
    /**
    * Implements hook_init()
    */
    function create_project_init() {
	drupal_add_css(drupal_get_path('module', 'create_project') .'/css/create_project.css');
	//drupal_add_js(drupal_get_path('module', 'create_project') .'/js/create_project.js');
    }
    
    /**	* Implementation of hook_permission().
	*/
	function create_project_permission() {
	  // Restrict access to either of your new URLs.
	  return array(
	    'access project page' => array(
	      'title' => t('Access project page'),
	      'description' => t('Allow users to access project page'),
	    ),
	  );
	}
	   
    
    
    /**
    * Implements hook_menu()
    */
    function create_project_menu() {        
	$items = array();
	$items['add_project'] = array(
	    'page callback' => 'drupal_get_form',
	    'page arguments' => array('create_project'),
	    //'access callback' => TRUE,
	    'access arguments' => array('access project page'),
	    'access callback' => 'user_access',
	    'type' => MENU_CALLBACK,
	);
	
	$items['add_project_ajax'] = array(	    
	    'page callback' => 'create_project_ajax',	    
	    //'access callback' => TRUE,
	    'access arguments' => array('access project page'),
	    'access callback' => 'user_access',
	    'type' => MENU_CALLBACK,
	);

	    $items['edit_project/%'] = array(
	    'title' => t('Edit Projects'),
	    'page callback' => 'drupal_get_form',
	    'page arguments' => array('create_project_edit', 1),
	    //'access callback' => TRUE,
	    'access arguments' => array('access project page'),
	    'access callback' => 'user_access',
	    'type' => MENU_CALLBACK,
	    );
	
	return $items;
    }
	
    
    /**
    * Implements hook_perm()
    */
    function create_project_perm() {
	return array('access create project module');
    }
    
    function create_project() { 
    
	//$node = node_load(74);
	//echo '<pre>';
	//print_r($node);
	//exit;

	$form = array();
	
        $form['name'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Name'),
	    '#default_value' => '',
	    '#required' => TRUE,
	    '#size' => 40,
	);	
	
	$form['project_description'] = array(
	    '#type' => 'textarea',
	    '#required' => TRUE,
	    '#title' => t('Project Description'),
	    '#default_value' => '',
	    '#cols' => 40,
	    '#rows' => 3,
	);
        
	$form['submit'] = array (
	    '#prefix' => '<div id="categorywise_user_submit">',
	    '#type' => 'submit',
	    '#value' => 'Submit',
	    '#suffix' => '</div></div>',
	);	

	return $form;
    }    


    function create_project_ajax(){

	$output = drupal_render(drupal_get_form('create_project_ajax_form'));
    
	ctools_include('ajax');
	ctools_include('modal');
	$commands = array();
	$commands[] = ctools_modal_command_display('Add Project', $output);
	print ajax_render($commands);	

    }


    function create_project_ajax_form() { 
    
	//$node = node_load(74);
	//echo '<pre>';
	//print_r($node);
	//exit;

	$form = array();
	
	$form['show_message'] = array(
  		'#markup' => "",
  		'#prefix' => '<div id="show_message_place">',
  		'#suffix' => '</div>',
	);
	
        $form['name'] = array(
	    '#type' => 'textfield',
	    '#title' => t('Name'),
	    '#default_value' => '',
	    '#required' => TRUE,
	    '#size' => 40,
	);	
	
	$form['project_description'] = array(
	    '#type' => 'textarea',
	    '#title' => t('Project Description'),
	    '#default_value' => '',
	    '#cols' => 40,
	    '#rows' => 3,
	    '#required' => TRUE,
	);
        
	$form['submit'] = array (
	    '#prefix' => '<div id="categorywise_user_submit">',
	    '#type' => 'submit',
	    '#value' => 'Submit',
	    '#suffix' => '</div></div>',
	);	

	return $form;
    }

    function create_project_ajax_form_validate($form, &$form_state) {

		  /*echo '<pre>';
		  print_r($form_state['complete form']['name']['#validated']);
		  exit;*/

		  /*echo '<pre>';
		  print_r(form_get_errors());	
		  exit;*/
		  
		  if(count(form_get_errors())>0){
		  ctools_include('ajax');
		  ctools_include('modal');

		  $commands = array();		  
		  //$commands[] = ctools_modal_command_dismiss();		  
		  //$commands[] = ajax_command_prepend('#content', '<div id="messages" class="grid-12">' . theme('status_messages') . '</div>');
		  
		  $commands[] = ajax_command_replace('#show_message_place', '<div id="messages" class="grid-12">' . theme('status_messages') . '</div>');
		  print ajax_render($commands);
		  exit;
		  }
    }

    function create_project_ajax_form_submit($form, &$form_state) {    
		
		//echo '<pre>';
		//print_r($form_state['values']);
		//exit;

		$node = new stdClass();
		$node->title = $form_state['values']['name'];		
		$node->type = 'project';		
		$node->language = LANGUAGE_NONE;
		$node->created = time();
		$node->log = t('Project created: '.$node->title);

		//$node->body[$node->language][0]['value']   = $body_text;
		//$node->body[$node->language][0]['summary'] = text_summary($body_text);
		//$node->body[$node->language][0]['format']  = 'filtered_html';	
		
		node_object_prepare($node); //sets up all the default values

		$node->field_project_descriptoin['und'][0]['value'] =  $form_state['values']['project_description'];
		
		  // Save new node
		  //node_validate($node);
		  //node_submit($node);
		  node_save($node);

		  //structure the notification message		  
		  $output = t("A new project @name has been created successfully.", array(
		      '@name' => $form_state['values']['name'],		      
		    )
		  );		  
		 
		  drupal_set_message($output);

		  ctools_include('ajax');
		  ctools_include('modal');

		  $commands = array();		  
		  $commands[] = ctools_modal_command_dismiss();		  
		  $commands[] = ajax_command_replace('#messages', '<div id="messages" class="grid-12">' . theme('status_messages') . '</div>');

		  $project_nid_created = $node->nid;
		  $node_title = $node->title;		  
		  $commands[] = ajax_command_invoke('#edit-project', 'append', array('<option selected value='.$project_nid_created.'>'.$node_title.'</option>'));
		  //$commands[] = ctools_ajax_command_redirect('add_job');
		  print ajax_render($commands);
		  exit;	
	
    }
    
    
    function create_project_submit($form, &$form_state) {    
		
		//echo '<pre>';
		//print_r($form_state['values']);
		//exit;

		$node = new stdClass();
		$node->title = $form_state['values']['name'];		
		$node->type = 'project';		
		$node->language = LANGUAGE_NONE;
		$node->created = time();
		$node->log = t('Project created: '.$node->title);

		//$node->body[$node->language][0]['value']   = $body_text;
		//$node->body[$node->language][0]['summary'] = text_summary($body_text);
		//$node->body[$node->language][0]['format']  = 'filtered_html';	
		
		node_object_prepare($node); //sets up all the default values

		$node->field_project_descriptoin['und'][0]['value'] =  $form_state['values']['project_description'];
		
		  // Save new node
		  //node_validate($node);
		  //node_submit($node);
		  node_save($node);

		  //structure the notification message		  
		  $output = t("A new project @name has been created successfully.", array(
		      '@name' => $form_state['values']['name'],		      
		    )
		  );		  
		 
		  drupal_set_message($output);
	
    }
    
    
    /**
     * Edit Create project
     * */        
    function create_project_edit($form, &$form_state, $pid) {

		//echo $id.'==xyz';

		$proj_array = node_load($pid);
		
		//echo '<pre>';
		//print_r($proj_array);
		//exit;
		
		$form = array();
	
		$form['name'] = array(
		    '#type' => 'textfield',
		    '#title' => t('Name'),
		    '#required' => TRUE,
		    '#default_value' => $proj_array->title,
		    '#size' => 40,
		);	
		
		
		$form['project_description'] = array(
		    '#type' => 'textarea',
		    '#title' => t('Project Description'),
		    '#required' => TRUE,
		    '#default_value' => $proj_array->field_project_descriptoin['und'][0]['value'],
		    '#cols' => 40,
		    '#rows' => 3,
		);		

		$form['pid'] = array(
		    '#type' => 'hidden',
		    '#title' => t('project Id'),
		    '#default_value' => $pid,
		    '#size' => 40,
		);
		
		$form['submit'] = array (
		    '#prefix' => '<div id="categorywise_user_submit">',
		    '#type' => 'submit',
		    '#value' => 'Submit',
		    '#suffix' => '</div></div>',
		);
		
		return $form;
    }
    
    function create_project_edit_validate($form, &$form_state) {
	
    }
    
    function create_project_edit_submit($form, &$form_state) {	
		
		//echo '<pre>';
		//print_r($form_state['values']);
		//exit;

		//load the existing node
		$node = node_load($form_state['values']['pid']);

		//echo '<pre>';
		//print_r($node);
		//exit;
		
		$node->title = $form_state['values']['name'];
		$node->type = 'project';		
		$node->language = LANGUAGE_NONE;
		$node->changed = time();
		//$node->revision = 1;
		$node->log = t('Project edited: '.$node->title);

		//$node->body[$node->language][0]['value']   = $body_text;
		//$node->body[$node->language][0]['summary'] = text_summary($body_text);
		//$node->body[$node->language][0]['format']  = 'filtered_html';	
		
		//node_object_prepare($node); //sets up all the default values
		
		$node->field_project_descriptoin['und'][0]['value'] =  $form_state['values']['project_description'];
		
		//echo '<pre>';
		//print_r($node);
		//exit;

		  // Save new node
		  //node_validate($node);
		  //node_submit($node);
		  node_save($node);

		  //structure the notification message		  
		  $output = t("The project @name has been updated successfully.", array(
		      '@name' => $form_state['values']['name'],		      
		    )
		  );
		 
		  drupal_set_message($output);		
	
    }
    
